{

  // "include": [//  用来表示需要被编译的ts文件目录
  //   "./src/**/*"// 路径: **表示任意目录, *表示任意文件
  //   ],
  // "exclude": //用来表示不需要被编译的文件目录
  // ["/src/hello/**/*"],//默认值：[“node_modules”, “bower_components”, “jspm_packages”]
  // "extends":"./configs/base",//表示当前配置文件中会自动包含config目录下base.json中的所有配置信息
  // "files": [//表示当前配置文件中会自动包含config目录下base.json中的所有配置信息
  //   "core.ts",
  //   "sys.ts",
  //   "types.ts"
  // ],
  
  
  
  
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig.json to read more about this file */

    /* Basic Options */
    // "incremental": true,                   /* Enable incremental compilation */
    "target": "es5" ,                          /*用来指定ts被编译为ES的版本 Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
    "module": "commonjs",                     /* 指定要使用的模块化的规范 Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
    // "lib": [],                             /* 用来指定项目所用的库 一般情况下不需要设置（浏览器运行的就不用管，nodejs运行的再根据实际使用去指定）Specify library files to be included in the compilation. */
    // "allowJs": true,                       /* 是否对js文件进行编译，默认是falseAllow javascript files to be compiled. */
    // "checkJs": true,                       /* 是否检查js代码是否符合语法规范，默认值是falseReport errors in .js files. */
    // "jsx": "preserve",                     /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    // "declaration": true,                   /* Generates corresponding '.d.ts' file. */
    // "declarationMap": true,                /* Generates a sourcemap for each corresponding '.d.ts' file. */
    // "sourceMap": true,                     /* Generates corresponding '.map' file. */
    // "outFile": "./",                       /* 将代码合并为一个文件  设置outFile后，所有的全局作用域中的代码会合并到同一个文件中Concatenate and emit output to single file. */
    // "outDir": "./dist",                        /* 用来指定编译后文件所在的目录Redirect output structure to the directory. */
    // "rootDir": "./dist/app.js",                       /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
    // "composite": true,                     /* Enable project compilation */
    // "tsBuildInfoFile": "./",               /* Specify file to store incremental compilation information */
    // "removeComments": true,                /* 是否移除注释Do not emit comments to output. */
    // "noEmit": true,                        /* 不生成编译后的文件Do not emit outputs. */
    // "importHelpers": true,                 /* Import emit helpers from 'tslib'. */
    // "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
    // "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */

    /* Strict Type-Checking Options */
    "strict": true,                           /* 当有错误时不生成编译文件Enable all strict type-checking options. */
    // "noImplicitAny": true,                 /* 不允许隐式的any类型Raise error on expressions and declarations with an implied 'any' type. */
    // "strictNullChecks": true,              /* 严格检查空值Enable strict null checks. */
    // "strictFunctionTypes": true,           /* Enable strict checking of function types. */
    // "strictBindCallApply": true,           /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    // "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */
    // "noImplicitThis": true,                /* 不允许不明确类型的thisRaise error on 'this' expressions with an implied 'any' type. */
    // "alwaysStrict": true,                  /* 用来设置编译后的文件是否使用严格模式，默认是falseParse in strict mode and emit "use strict" for each source file. */

    /* Additional Checks */
    // "noUnusedLocals": true,                /* Report errors on unused locals. */
    // "noUnusedParameters": true,            /* Report errors on unused parameters. */
    // "noImplicitReturns": true,             /* Report error when not all code paths in function return a value. */
    // "noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement. */

    /* Module Resolution Options */
    // "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    // "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
    // "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
    // "typeRoots": [],                       /* List of folders to include type definitions from. */
    // "types": [],                           /* Type declaration files to be included in compilation. */
    // "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true,                  /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
    // "allowUmdGlobalAccess": true,          /* Allow accessing UMD globals from modules. */

    /* Source Map Options */
    // "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
    // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

    /* Experimental Options */
    // "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
    // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */

    /* Advanced Options */
    "skipLibCheck": true,                     /* Skip type checking of declaration files. */
    "forceConsistentCasingInFileNames": true  /* Disallow inconsistently-cased references to the same file. */
  }
}
